<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>