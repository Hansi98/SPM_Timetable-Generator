<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>