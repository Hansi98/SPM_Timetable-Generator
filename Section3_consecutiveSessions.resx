<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="nishikistatimg.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>