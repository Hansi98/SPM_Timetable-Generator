<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>