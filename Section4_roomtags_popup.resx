<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>